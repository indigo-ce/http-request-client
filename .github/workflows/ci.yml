name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        swift-version: ['6.0']
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ matrix.swift-version }}
        
    - name: Build
      run: swift build --verbose
      
    - name: Run Tests
      run: swift test --verbose

  test-ios:
    name: Test iOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: List available iOS simulators
      run: xcrun simctl list devices --json iOS
        
    - name: Build for iOS
      run: |
        xcodebuild -scheme HTTPRequestClient \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -sdk iphonesimulator \
          ENABLE_USER_SCRIPT_SANDBOXING=NO \
          build
          
    - name: Test iOS
      run: |
        xcodebuild -scheme HTTPRequestClient \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -sdk iphonesimulator \
          ENABLE_USER_SCRIPT_SANDBOXING=NO \
          test

  test-watchos:
    name: Test watchOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: List available watchOS simulators
      run: xcrun simctl list devices --json watchOS
        
    - name: Build for watchOS
      run: |
        xcodebuild -scheme HTTPRequestClient \
          -destination 'platform=watchOS Simulator,name=Apple Watch Series 8 (45mm),OS=latest' \
          -sdk watchsimulator \
          ENABLE_USER_SCRIPT_SANDBOXING=NO \
          build

  test-tvos:
    name: Test tvOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Build for tvOS
      run: |
        xcodebuild -scheme HTTPRequestClient \
          -destination 'platform=tvOS Simulator,name=Apple TV,OS=latest' \
          -sdk appletvsimulator \
          ENABLE_USER_SCRIPT_SANDBOXING=NO \
          build